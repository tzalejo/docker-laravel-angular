version: "3"

networks:
  laravel:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - "8088:80"
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.31
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "5306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: cec
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: admin
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: php
    volumes:
      - ./backend:/var/www/html:delegated
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    # entrypoint: ['composer', '--ignore-platform-reqs']


  npm:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: npm
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    # - /app/node_modules/
    # working_dir: /app
    # entrypoint: ["npm"]
    user: 1000:1000
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: artisan
    volumes:
      - ./backend:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel
