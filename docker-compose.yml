version: "3"

networks:
  laravel:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ${APP_VOLUMEN_PATH}:/var/www/html
    depends_on:
      - php
      - pgsql
      # - mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - PHP_VERSION=${APP_PHP_VERSION}
        - PHP_VARIANTE=${APP_PHP_VARIANTE}
    container_name: php
    volumes:
      - ${APP_VOLUMEN_PATH}:/var/www/html:delegated
      - ./php-worker/supervisord.d:/etc/supervisord.d
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
      args:
        - COMPOSER_VERSION=${COMPOSER_VERSION}
    container_name: composer
    volumes:
      - ${APP_VOLUMEN_PATH}:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel

  npm:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args: 
        - NODE_VERSION=${NPM_NODE_VERSION}
        - NODE_VARIANTE=${NPM_NODE_VARIANTE}
    container_name: npm
    ports:
      - "${NPM_PORT}:${NPM_PORT_CONTAINER}"
    volumes:
      - ${NPM_VOLUMEN_PATH}:/app
    user: 1000:1000
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - PHP_VERSION=${APP_PHP_VERSION}
        - PHP_VARIANTE=${APP_PHP_VARIANTE}
    container_name: artisan
    volumes:
      - ${APP_VOLUMEN_PATH}:/var/www/html:delegated
    depends_on:
      - pgsql
      # - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - laravel

### PostgreSQL ###########################################
  pgsql:
    build:
      context: ./postgres
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    container_name: pgsql
    restart: unless-stopped
    tty: true
    volumes:
      - ${POSTGRES_VOLUMEN_PATH}:/var/lib/postgresql/data
      # - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - laravel
  
  cron:
    build: 
      context: .
      args: 
        - PHP_VERSION=${APP_PHP_VERSION}
        - PHP_VARIANTE=${APP_PHP_VARIANTE}
      dockerfile: cron.dockerfile
    container_name: cron
    networks: 
      - laravel
    volumes: 
      - ${APP_VOLUMEN_PATH}:/var/www/html

  supervisor-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - PHP_VERSION=${APP_PHP_VERSION}
        - PHP_VARIANTE=${APP_PHP_VARIANTE}
    container_name: supervisor-worker
    depends_on:
      - pgsql
    entrypoint: ["/usr/bin/supervisord", "-n", "-c",  "/etc/supervisord.conf"]
    volumes:
      - ${APP_VOLUMEN_PATH}:/var/www/html:delegated
      - ./php-worker/supervisord.d:/etc/supervisord.d
    networks:
      - laravel
  
  # pgadmin:
  #   links:
  #     - pgsql
  #   image: thajeztah/pgadmin4
  #   container_name: pgadmin
  #   volumes:
  #     - /data/pgadmin/pgadmin:/root/.pgadmin
  #   ports:
  #     - "5050:5050"
  #   restart: unless-stopped
  #   networks: 
  #     - laravel
  #   depends_on:
  #     - pgsql

### MySql  ################################################
  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   container_name: mysql
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - "${MYSQL_PORT}:${MYSQL_PORT_CONTAINER}"
  #   volumes:
  #     - ${MYSQL_VOLUMEN_PATH}:/var/lib/mysql
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     SERVICE_NAME: ${MYSQL_SERVICE_NAME}
  #     SERVICE_TAGS: ${MYSQL_SERVICE_TAGS}
  #   networks:
  #     - laravel